{"version":3,"sources":["components/Context/index.js","components/Gallery/image.js","components/Gallery/tag.js","components/Gallery/galleryItems.js","components/common/colorPicker.js","components/Gallery/buttons.js","components/Gallery/search.js","components/Gallery/header.js","components/Gallery/index.js","components/common/loader.js","components/App.js","serviceWorker.js","index.js"],"names":["GalleryContext","React","createContext","Provider","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","images","tags","title","classes","bgColor","fontColor","borderColor","btnColor","showImages","loading","getRandomWords","asyncToGenerator","regenerator_default","a","mark","_callee","response","data","wrap","_context","prev","next","process","axios","get","sent","status","setState","abrupt","stop","getImages","_ref2","_callee2","tag","_ref3","_context2","photos","photo","slice","_x","returnToTags","getNewTags","_callee3","_context3","changeColorClasses","num","performSearch","input","inherits","createClass","key","value","_componentDidMount","_callee4","_context4","react_default","createElement","actions","props","children","Component","Consumer","Image","_ref","image","backgroundImage","farm","server","id","secret","styles","className","style","Tag","onClick","GalleryItems","map","Gallery_image","Gallery_tag","word","ColorPicker","Buttons","Fragment","colorPicker","Search","handleValueChange","e","target","handleSubmit","preventDefault","_this$props$classes","onSubmit","type","placeholder","onChange","Header","search","buttons","Gallery","header","galleryItems","Loader","App","loader","components_Gallery","Boolean","window","location","hostname","match","ReactDOM","render","Context_Provider","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yQAGMA,EAAiBC,IAAMC,gBAEhBC,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,GAAA,QAAAO,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAAJ,IAAAe,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MACEQ,MAAQ,CACNC,OAAQ,GACRC,KAAM,GACNC,MAAO,sBACPC,QAAS,CACPC,QAAS,aACTC,UAAW,eACXC,YAAa,iBACbC,SAAU,eAEZC,YAAY,EACZC,SAAS,GAZbzB,EAqBE0B,eArBFzB,OAAA0B,EAAA,EAAA1B,CAAA2B,EAAAC,EAAAC,KAqBmB,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAL,EAAAC,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,aACOC,oDADPH,EAAAE,KAAA,EAEQE,IAAMC,IAAN,+NAAA1B,OADDwB,sDADP,UAGQ,OADjBN,EAFSG,EAAAM,MAGHC,OAHG,CAAAP,EAAAE,KAAA,QAILJ,EAASD,EAATC,KACRjC,EAAK2C,SAAS,CAAE1B,KAAMgB,IALTE,EAAAE,KAAA,uBAAAF,EAAAS,OAAA,mCAAAT,EAAAU,SAAAd,EAAA5B,SArBnBH,EAgCE8C,UAhCF,eAAAC,EAAA9C,OAAA0B,EAAA,EAAA1B,CAAA2B,EAAAC,EAAAC,KAgCc,SAAAkB,EAAMC,GAAN,IAAAC,EAAAjB,EAAAjB,EAAA,OAAAY,EAAAC,EAAAK,KAAA,SAAAiB,GAAA,cAAAA,EAAAf,KAAAe,EAAAd,MAAA,aACKC,mCADLa,EAAAd,KAAA,EAEaE,IAAK,6EAAAzB,OADbwB,mCACa,UAAAxB,OAA6FmC,EAA7F,2EAFlB,OAAAC,EAAAC,EAAAV,KAEFR,EAFEiB,EAEFjB,KACFjB,EAASiB,EAAKmB,OAAOC,MAAMC,MAAM,EAAG,IAC1CtD,EAAK2C,SAAS,CACZ3B,SACAQ,YAAY,EACZN,MAAO+B,IAPC,wBAAAE,EAAAN,SAAAG,EAAA7C,SAhCd,gBAAAoD,GAAA,OAAAR,EAAAlC,MAAAV,KAAAE,YAAA,GAAAL,EA2CEwD,aAAe,WACbxD,EAAK2C,SAAS,CACZnB,YAAY,EACZN,MAAO,yBA9CblB,EAkDEyD,WAlDFxD,OAAA0B,EAAA,EAAA1B,CAAA2B,EAAAC,EAAAC,KAkDe,SAAA4B,IAAA,OAAA9B,EAAAC,EAAAK,KAAA,SAAAyB,GAAA,cAAAA,EAAAvB,KAAAuB,EAAAtB,MAAA,OACXrC,EAAK0B,iBADM,wBAAAiC,EAAAd,SAAAa,EAAAvD,SAlDfH,EAsDE4D,mBAAqB,SAAAC,GACnB7D,EAAK2C,SAAS,CACZxB,QAAS,CACPC,QAAO,YAAAN,OAAc+C,GACrBxC,UAAS,cAAAP,OAAgB+C,GACzBvC,YAAW,gBAAAR,OAAkB+C,GAC7BtC,SAAQ,aAAAT,OAAe+C,OA5D/B7D,EAiEE8D,cAAgB,SAAAC,GACd/D,EAAK8C,UAAUiB,IAlEnB/D,EAAA,OAAAC,OAAA+D,EAAA,EAAA/D,CAAAJ,EAAAC,GAAAG,OAAAgE,EAAA,EAAAhE,CAAAJ,EAAA,EAAAqE,IAAA,oBAAAC,MAAA,eAAAC,EAAAnE,OAAA0B,EAAA,EAAA1B,CAAA2B,EAAAC,EAAAC,KAAA,SAAAuC,IAAA,OAAAzC,EAAAC,EAAAK,KAAA,SAAAoC,GAAA,cAAAA,EAAAlC,KAAAkC,EAAAjC,MAAA,cAgBIlC,KAAKwC,SAAS,CAAElB,SAAS,IAhB7B6C,EAAAjC,KAAA,EAiBUlC,KAAKuB,iBAjBf,OAkBIvB,KAAKwC,SAAS,CAAElB,SAAS,IAlB7B,wBAAA6C,EAAAzB,SAAAwB,EAAAlE,SAAA,yBAAAiE,EAAAvD,MAAAV,KAAAE,YAAA,KAAA6D,IAAA,SAAAC,MAAA,WAsEI,OACEI,EAAA1C,EAAA2C,cAAC9E,EAAeG,SAAhB,CAAyBsE,MAAO,CAC9BnD,OAAQb,KAAKY,MAAMC,OACnBC,KAAMd,KAAKY,MAAME,KACjBC,MAAOf,KAAKY,MAAMG,MAClBC,QAAShB,KAAKY,MAAMI,QACpBK,WAAYrB,KAAKY,MAAMS,WACvBC,QAAStB,KAAKY,MAAMU,QACpBgD,QAAS,CACPX,cAAe3D,KAAK2D,cACpBhB,UAAW3C,KAAK2C,UAChBU,aAAcrD,KAAKqD,aACnBC,WAAYtD,KAAKsD,WACjBG,mBAAoBzD,KAAKyD,sBAG3BzD,KAAKuE,MAAMC,cAtFnB9E,EAAA,CAA8B+E,aA4FjBC,EAAWnF,EAAemF,SCpFxBC,EAXD,SAAAC,GAAe,IAAZC,EAAYD,EAAZC,MACTC,EAAe,eAAAnE,OAAkBkE,EAAME,KAAxB,sBAAApE,OAAiDkE,EAAMG,OAAvD,KAAArE,OAAiEkE,EAAMI,GAAvE,KAAAtE,OAA6EkE,EAAMK,OAAnF,QACfC,EAAS,CAAEL,gBAAe,OAAAnE,OAASmE,EAAT,MAEhC,OACEV,EAAA1C,EAAA2C,cAAA,MAAIe,UAAU,mBACZhB,EAAA1C,EAAA2C,cAAA,OAAKe,UAAU,QAAQC,MAAOF,GAA9B,OCKSG,EAXH,SAAAV,GAAiC,IAA9B9B,EAA8B8B,EAA9B9B,IAAKH,EAAyBiC,EAAzBjC,UAAW1B,EAAc2D,EAAd3D,QAE7B,OACEmD,EAAA1C,EAAA2C,cAAA,MAAIe,UAAU,mBACZhB,EAAA1C,EAAA2C,cAAA,OAAKe,UAAS,OAAAzE,OAASM,GAAWsE,QAAS,kBAAK5C,EAAUG,KACxDsB,EAAA1C,EAAA2C,cAAA,SAAIvB,MC0BG0C,EA5BM,WAEnB,OACEpB,EAAA1C,EAAA2C,cAACK,EAAD,KACI,SAAAE,GAAoD,IAAjDvD,EAAiDuD,EAAjDvD,WAAYR,EAAqC+D,EAArC/D,OAAQC,EAA6B8D,EAA7B9D,KAAME,EAAuB4D,EAAvB5D,QAASsD,EAAcM,EAAdN,QACtC,OACEjD,EACER,EAAO4E,IAAI,SAAAZ,GAAK,OACdT,EAAA1C,EAAA2C,cAACqB,EAAD,CACE3B,IAAKc,EAAMI,GACXJ,MAAOA,MAGX/D,EAAK2E,IAAK,SAAA3C,GAAG,OACXsB,EAAA1C,EAAA2C,cAACsB,EAAD,CACE5B,IAAKjB,EAAImC,GACTnC,IAAKA,EAAI8C,KACTjD,UAAW2B,EAAQ3B,UACnB1B,QAASD,EAAQC,eCClB4E,EArBK,WAClB,OACEzB,EAAA1C,EAAA2C,cAACK,EAAD,KACI,SAAAE,GAA0B,IAAvB5D,EAAuB4D,EAAvB5D,QAASsD,EAAcM,EAAdN,QACZ,OACEF,EAAA1C,EAAA2C,cAAA,OAAKe,UAAS,gBAAAzE,OAAkBK,EAAQG,cACpC,CAAC,IAAK,IAAK,IAAK,IAAK,KAAKsE,IAAK,SAAA/B,GAAG,OAChCU,EAAA1C,EAAA2C,cAAA,UACEN,IAAKL,EACL0B,UAAS,sBAAAzE,OAAwB+C,GACjC6B,QAAS,kBAAMjB,EAAQb,mBAAmBC,YCkB7CoC,EA5BC,SAAAlB,GAAuD,IAApD5D,EAAoD4D,EAApD5D,QAASK,EAA2CuD,EAA3CvD,WAAYgC,EAA+BuB,EAA/BvB,aAAcC,EAAiBsB,EAAjBtB,WACpD,OACEc,EAAA1C,EAAA2C,cAAA,OAAKe,UAAU,iBAEX/D,EAEA+C,EAAA1C,EAAA2C,cAAA,UACEe,UAAS,OAAAzE,OAASK,EAAQI,UAC1BmE,QAASlC,GAFX,oBAMAe,EAAA1C,EAAA2C,cAACD,EAAA1C,EAAMqE,SAAP,KACE3B,EAAA1C,EAAA2C,cAAA,UACEe,UAAS,OAAAzE,OAASK,EAAQI,UAC1BmE,QAASjC,GAFX,eAMAc,EAAA1C,EAAA2C,cAAC2B,EAAD,SCoBKC,6MAvCbrF,MAAQ,CACNoD,MAAO,MAGTkC,kBAAoB,SAAAC,GAClBtG,EAAK2C,SAAS,CAAEwB,MAAOmC,EAAEC,OAAOpC,WAGlCqC,aAAe,SAAAF,GACbA,EAAEG,iBACFzG,EAAK0E,MAAMZ,cAAc9D,EAAKe,MAAMoD,OACpCnE,EAAK2C,SAAS,CAACwB,MAAO,8EAGf,IAAAuC,EAE2BvG,KAAKuE,MAAMvD,QAArCG,EAFDoF,EAECpF,YAAaC,EAFdmF,EAEcnF,SAErB,OACEgD,EAAA1C,EAAA2C,cAAA,QAAMmC,SAAUxG,KAAKqG,cACnBjC,EAAA1C,EAAA2C,cAAA,SACEe,UAAS,gBAAAzE,OAAkBQ,GAC3BsF,KAAK,OACLC,YAAY,YACZC,SAAU3G,KAAKkG,kBACflC,MAAOhE,KAAKY,MAAMoD,QAGpBI,EAAA1C,EAAA2C,cAAA,UACEe,UAAS,kBAAAzE,OAAoBS,GAC7BqF,KAAK,UAFP,kBA7BahC,aC2BNmC,EAxBA,WACb,OACExC,EAAA1C,EAAA2C,cAACK,EAAD,KACK,SAAAE,GAA6C,IAA1C7D,EAA0C6D,EAA1C7D,MAAOC,EAAmC4D,EAAnC5D,QAASK,EAA0BuD,EAA1BvD,WAAYiD,EAAcM,EAAdN,QAC9B,OACEF,EAAA1C,EAAA2C,cAAA,MAAIe,UAAS,gBAAAzE,OAAkBK,EAAQG,cACrCiD,EAAA1C,EAAA2C,cAAA,QAAMe,UAAS,SAAAzE,OAAWK,EAAQE,YAAcH,GAChDqD,EAAA1C,EAAA2C,cAACwC,EAAD,CACE7F,QAASA,EACT2C,cAAeW,EAAQX,gBAEzBS,EAAA1C,EAAA2C,cAACyC,EAAD,CACE9F,QAASA,EACTK,WAAYA,EACZgC,aAAciB,EAAQjB,aACtBC,WAAYgB,EAAQhB,iBCLrByD,EAXC,WACd,OACE3C,EAAA1C,EAAA2C,cAAA,OAAKe,UAAU,WACbhB,EAAA1C,EAAA2C,cAAA,MAAIe,UAAU,cACZhB,EAAA1C,EAAA2C,cAAC2C,EAAD,MACA5C,EAAA1C,EAAA2C,cAAC4C,EAAD,SCFOC,EALA,kBACb9C,EAAA1C,EAAA2C,cAAA,OAAKe,UAAU,kBACbhB,EAAA1C,EAAA2C,cAAA,OAAKe,UAAU,WADjB,MCqBa+B,EAnBH,WACV,OACE/C,EAAA1C,EAAA2C,cAACK,EAAD,KACG,SAAAE,GAAkB,IAAftD,EAAesD,EAAftD,QACF,OACE8C,EAAA1C,EAAA2C,cAAA,OAAKe,UAAU,aACX9D,EAEE8C,EAAA1C,EAAA2C,cAAC+C,EAAD,MAEAhD,EAAA1C,EAAA2C,cAACgD,EAAD,gBCHIC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACPxD,EAAA1C,EAAA2C,cAACwD,EAAD,KACEzD,EAAA1C,EAAA2C,cAACyD,EAAD,OAEFC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.4b719f07.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst GalleryContext = React.createContext();\n\nexport class Provider extends Component {\n  state = { \n    images: [],\n    tags: [],\n    title: 'Interactive Gallery',\n    classes: {\n      bgColor: 'bg-color-1',\n      fontColor: 'font-color-1',\n      borderColor: 'border-color-1',\n      btnColor: 'btn-color-1'\n    },\n    showImages: false,\n    loading: false\n  }\n\n  async componentDidMount() {\n    this.setState({ loading: true });\n    await this.getRandomWords();\n    this.setState({ loading: false });\n  }\n\n  getRandomWords = async() => {\n    const wordnikApiKey = process.env.REACT_APP_WORDNIK_APIKEY;\n    const response = await axios.get(`https://api.wordnik.com/v4/words.json/randomWords?hasDictionaryDef=true&includePartOfSpeech=noun&minCorpusCount=5000&maxCorpusCount=-1&minDictionaryCount=1&maxDictionaryCount=-1&minLength=3&maxLength=-1&limit=10&api_key=${wordnikApiKey}`);\n    if(response.status === 200) {\n      const { data } = response;\n      this.setState({ tags: data })\n    } else {\n      return;\n    }\n  }\n\n  getImages = async(tag) => {\n    const apiKey = process.env.REACT_APP_FLICKR_APIKEY;\n    const { data } = await axios(`https://api.flickr.com/services/rest/?method=flickr.photos.search&api_key=${apiKey}&text=${tag}&sort=relevance&safe_search=1&per_page=10&format=json&nojsoncallback=1`);\n    const images = data.photos.photo.slice(0, 10);\n    this.setState({ \n      images, \n      showImages: true,\n      title: tag\n    });\n  }\n\n  returnToTags = () => {\n    this.setState({ \n      showImages: false,\n      title: 'Interactive Gallery'\n    });\n  }\n\n  getNewTags = async () => {\n    this.getRandomWords();\n  }\n\n  changeColorClasses = num => {\n    this.setState({ \n      classes: {\n        bgColor: `bg-color-${num}`,\n        fontColor: `font-color-${num}`,\n        borderColor: `border-color-${num}`,\n        btnColor: `btn-color-${num}`\n      }, \n    });\n  }\n\n  performSearch = input => {\n    this.getImages(input);\n  }\n\n  render() { \n    return ( \n      <GalleryContext.Provider value={{\n        images: this.state.images,\n        tags: this.state.tags,\n        title: this.state.title,\n        classes: this.state.classes,\n        showImages: this.state.showImages,\n        loading: this.state.loading,\n        actions: {\n          performSearch: this.performSearch,\n          getImages: this.getImages,\n          returnToTags: this.returnToTags,\n          getNewTags: this.getNewTags,\n          changeColorClasses: this.changeColorClasses\n        }\n      }}>\n      { this.props.children }\n      </GalleryContext.Provider>\n     );\n  }\n}\n\nexport const Consumer = GalleryContext.Consumer;","import React from 'react';\n\nconst Image = ({ image }) => {\n  const backgroundImage = `https://farm${image.farm}.staticflickr.com/${image.server}/${image.id}_${image.secret}.jpg`;\n  const styles = { backgroundImage: `url(${backgroundImage})`};\n\n  return (\n    <li className=\"photo-container\">\n      <div className=\"photo\" style={styles}> </div>\n    </li>\n   );\n}\n \nexport default Image;","import React from 'react';\n\nconst Tag = ({ tag, getImages, bgColor }) => {\n\n  return (\n    <li className=\"photo-container\">\n      <div className={`tag ${bgColor}`} onClick={()=> getImages(tag)}>\n        <p>{tag}</p>\n      </div>\n    </li>\n   );\n}\n \nexport default Tag;","import React from 'react';\nimport { Consumer } from '../Context';\nimport Image from './image';\nimport Tag from './tag';\n\nconst GalleryItems = () => {\n\n  return (\n    <Consumer>\n      { ({ showImages, images, tags, classes, actions }) => {\n        return (\n          showImages ?\n            images.map(image => \n              <Image \n                key={image.id} \n                image={image} \n              /> \n            )\n          : tags.map( tag => \n              <Tag \n                key={tag.id}\n                tag={tag.word}\n                getImages={actions.getImages}\n                bgColor={classes.bgColor}\n              />\n            )\n        );\n        }\n      }\n    </Consumer>\n   );\n}\n \nexport default GalleryItems;","import React from 'react';\nimport { Consumer } from '../Context';\n\nconst ColorPicker = () => {\n  return ( \n    <Consumer>\n      { ({ classes, actions }) => {\n        return (\n          <div className={`color-picker ${classes.borderColor}`}>\n            { ['1', '2', '3', '4', '5'].map( num =>\n                <button \n                  key={num}\n                  className={`btn-theme bg-color-${num}`}\n                  onClick={() => actions.changeColorClasses(num)}\n                >\n                </button>\n            )}\n          </div>\n        );\n      }}\n    </Consumer>\n  )\n}\n \nexport default ColorPicker;","import React from 'react';\nimport ColorPicker from '../common/colorPicker';\n\nconst Buttons = ({ classes, showImages, returnToTags, getNewTags }) => {\n  return (\n    <div className=\"btn-container\">\n\n      { showImages ?\n\n        <button \n          className={`btn ${classes.btnColor}`}\n          onClick={returnToTags}\n        >Return To Topics\n        </button>\n\n      : <React.Fragment>\n          <button \n            className={`btn ${classes.btnColor}`}\n            onClick={getNewTags}\n          >More Topics\n          </button>\n\n          <ColorPicker />\n\n        </React.Fragment>\n      }\n\n    </div>\n  );\n}\n \nexport default Buttons;","import React, { Component } from 'react';\n\nclass Search extends Component {\n  state = { \n    value: ''\n  };\n\n  handleValueChange = e => {\n    this.setState({ value: e.target.value });\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.performSearch(this.state.value);\n    this.setState({value: ''});\n  }\n\n  render() { \n\n    const { borderColor, btnColor } = this.props.classes;\n\n    return ( \n      <form onSubmit={this.handleSubmit}>\n        <input\n          className={`search-input ${borderColor}`}\n          type=\"text\"\n          placeholder=\"Search...\"\n          onChange={this.handleValueChange}\n          value={this.state.value}\n        />\n\n        <button \n          className={`btn submit-btn ${btnColor}`}\n          type=\"submit\"\n        >\n        Submit\n        </button>\n      </form>\n    );\n  }\n}\n \nexport default Search;","import React from 'react';\nimport { Consumer } from '../Context';\nimport Buttons from './buttons';\nimport Search from './search';\n\nconst Header = () => {\n  return (\n    <Consumer>\n        {({ title, classes, showImages, actions }) => {\n          return ( \n            <li className={`photo-header ${classes.borderColor}`}>\n              <span className={`title ${classes.fontColor}`}>{title}</span>\n              <Search \n                classes={classes}\n                performSearch={actions.performSearch}\n              />\n              <Buttons \n                classes={classes}\n                showImages={showImages}\n                returnToTags={actions.returnToTags}\n                getNewTags={actions.getNewTags}\n              />\n            </li>\n          );\n        }}\n    </Consumer>\n  );\n}\n \nexport default Header;","import React from 'react';\nimport GalleryItems from './galleryItems';\nimport Header from './header';\n\nconst Gallery = () => {\n  return (\n    <div className=\"content\">\n      <ul className=\"photo-list\">\n        <Header />\n        <GalleryItems />\n      </ul>\n    </div>\n  );\n}\n \nexport default Gallery;","import React from 'react';\n\nconst Loader = () => \n  <div className=\"loader-wrapper\">\n    <div className=\"loader\"></div>;\n  </div>\n \nexport default Loader;","import React from 'react';\nimport { Consumer } from './Context';\nimport Gallery from './Gallery';\nimport Loader from './common/loader';\n\nconst App = () => {\n  return (\n    <Consumer>\n      {({ loading }) =>  {\n        return (\n          <div className=\"container\">\n            { loading\n              ?\n                <Loader />\n              :\n                <Gallery />\n            }\n          </div>\n        );\n      }}\n    </Consumer>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from './components/Context';\nimport App from './components/App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider>\n    <App />\n  </Provider>,\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}